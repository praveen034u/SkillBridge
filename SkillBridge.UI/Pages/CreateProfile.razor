@page "/create-profile"
@inject HttpClient Http
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

<PageTitle>Create Profile</PageTitle>

<div class="container mt-5">
    <h2 class="text-center">Create Your Profile</h2>

    <!-- Role Selection -->
    @if (string.IsNullOrEmpty(UserRole))
    {
        <div class="text-center mb-4">
            <h5>Select Your Role:</h5>
            <button class="btn btn-primary m-2" @onclick="@(() => SelectRole("Employee"))">I am an Employee</button>
            <button class="btn btn-success m-2" @onclick="@(() => SelectRole("Employer"))">I am an Employer</button>
        </div>
    }
    else
    {
        <EditForm Model="@userProfile" OnValidSubmit="SubmitProfile">
            <DataAnnotationsValidator />
            <div class="card p-4 shadow-sm">
                <h4 class="text-center">@UserRole Profile</h4>

                <!-- Common Fields -->
                <div class="mb-3">
                    <label class="form-label">Full Name</label>
                    <InputText class="form-control" @bind-Value="userProfile.Name" required />
                </div>

                <div class="mb-3">
                    <label class="form-label">Email</label>
                    <InputText class="form-control" @bind-Value="userProfile.Email" required />
                </div>

                <!-- Employee-Specific Fields -->
                @if (UserRole == "Employee")
                {
                    <div class="mb-3">
                        <label class="form-label">Skills (comma-separated)</label>
                        <InputText class="form-control" @bind-Value="userProfile.Skills" required />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Experience (Years)</label>
                        <InputNumber class="form-control" @bind-Value="userProfile.Experience" />
                    </div>
                } else if (UserRole == "Employer")
                {
                <div class="mb-3">
                    <label class="form-label">Company Name</label>
                    <InputText class="form-control" @bind-Value="userProfile.CompanyName" required />
                </div>

                <div class="mb-3">
                    <label class="form-label">Company Website</label>
                    <InputText class="form-control" @bind-Value="userProfile.CompanyWebsite" />
                </div>
                }

                <button type="submit" class="btn btn-primary w-100">Create Profile</button>

                <!-- Option to go back and change role -->
                <div class="text-center mt-3">
                    <a href="javascript:void(0);" @onclick="ResetRole">Change Role</a>
                </div>
            </div>
        </EditForm>
    }
</div>

@code {
    private string UserRole;
    private UserProfile userProfile = new();

    private async Task SelectRole(string role)
    {
        UserRole = role;
        userProfile.Role = role;

        // Fetch existing profile (if any)
        var profileJson = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "user_profile");
        if (!string.IsNullOrEmpty(profileJson))
        {
            userProfile = System.Text.Json.JsonSerializer.Deserialize<UserProfile>(profileJson);
            userProfile.Role = role;
        }
    }

    private void ResetRole()
    {
        UserRole = null;
        userProfile = new UserProfile();
    }

    private async Task SubmitProfile()
    {
        Navigation.NavigateTo("/employee-dashboard", forceLoad: true);

        // var accessToken = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "access_token");

        // var response = await Http.PostAsJsonAsync("/api/profile", userProfile);
        // if (response.IsSuccessStatusCode)
        // {
        //     await JSRuntime.InvokeVoidAsync("localStorage.setItem", "user_profile", System.Text.Json.JsonSerializer.Serialize(userProfile));

        //     if (UserRole == "Employee")
        //     {
        //         Navigation.NavigateTo("/employee-dashboard", forceLoad: true);
        //     }
        //     else if (UserRole == "Employer")
        //     {
        //         Navigation.NavigateTo("/employer-dashboard", forceLoad: true);
        //     }
        // }
    }

    private class UserProfile
    {
        public string Id { get; set; }
        public string Name { get; set; }
        public string Email { get; set; }
        public string Role { get; set; }
        public string Skills { get; set; }  // Only for Employees
        public int Experience { get; set; } // Only for Employees
        public string CompanyName { get; set; } // Only for Employers
        public string CompanyWebsite { get; set; } // Only for Employers
    }
}
